CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_MTO_GIRADO`(
											 IN XANO VARCHAR(4),
											 IN XREG_SIAF VARCHAR(10), 
                                             IN XCOD_CTE VARCHAR(3), 
                                             IN XTIP_GIR VARCHAR(2),
                                             IN XGLOSA VARCHAR(500),
                                             IN XIMP_DOCU DECIMAL(13,2),
                                             IN XRUC		VARCHAR(11),
                                             IN XNRO_COM	VARCHAR(11),
                                             IN XUSUARIO	VARCHAR(10),
                                             IN XIMP_MYPE	VARCHAR(5),
                                             IN XIMP_DETC	VARCHAR(5),
                                             IN XIMP_IGV	VARCHAR(5),
                                             IN XIMP_PENA	VARCHAR(5),
                                             IN XIMP_CUARTA	VARCHAR(5),
                                             IN XVCOD_SEC	VARCHAR(4),
                                             IN XCOD_CLA	VARCHAR(4),
                                             IN XPTO		VARCHAR(2),
                                             IN XSEC_DEV	VARCHAR(6), 
                                             IN XMODO       CHAR(1), 
                                             IN XTIP_CAM	DECIMAL(13,2),
                                             IN XTIP_MON	VARCHAR(3)
                                             )
BEGIN
DECLARE VAR_SECUENCIA 		VARCHAR(6);
DECLARE VAR_SECUENCIA_INT 	VARCHAR(4);
DECLARE VAR_SECUENCIA_DEV		VARCHAR(6);
DECLARE VAR_SECUENCIA_INT_DEV 	VARCHAR(4);
DECLARE	VAR_CONT_DEV 		INT;
DECLARE	VAR_CONT_GIRO		INT;
DECLARE VAR_FUENTE_FINANCIAMIENTO	VARCHAR(2);
DECLARE VAR_TIPO_FINANCIAMIENTO	VARCHAR(2);
DECLARE VAR_NIMP_MON_EXT		DECIMAL(13,2);	
DECLARE VAR_TIP_MOVIMIENTO		CHAR(1);
DECLARE VAR_COD_ORIGEN			VARCHAR(2);
DECLARE VAR_COD_RECURSO			VARCHAR(2);	
DECLARE VAR_SECUENCIA_GIRO 		VARCHAR(6);
DECLARE VAR_SECUENCIA_INT_GIRO 	VARCHAR(4);
DECLARE VAR_ID_CLASIFICADOR 	VARCHAR(4);
DECLARE VAR_COD_SEC_FUNC 		VARCHAR(4);
DECLARE VAR_NIMP_MON_SOL		DECIMAL(13,2);

SELECT COUNT(1)INTO VAR_CONT_DEV 
FROM iafas_movimiento 
WHERE 
VREG_SIAF=XREG_SIAF AND 
VCOD_ESTADO = 'AC' AND 
VFASE='C';

/* INICIO MODO INSERCION*/
IF XMODO = "I" THEN 
    
	IF ( VAR_CONT_DEV = 1 ) THEN 
		
        /*[INICIO]:: OBTENIENDO DATOS DE LA FASE ANTERIOR*/
        SELECT  VFUENTE_FINANCIAMIENTO, VCOD_TIPO_FINANCIAMIENTO, VSECUENCIA, VSECUENCIA_INT
        INTO VAR_FUENTE_FINANCIAMIENTO, VAR_TIPO_FINANCIAMIENTO, VAR_SECUENCIA_DEV, VAR_SECUENCIA_INT_DEV
        FROM iafas_movimiento
        WHERE
        VREG_SIAF=XREG_SIAF AND 
		VCOD_ESTADO = 'AC' AND
		VFASE='C';
       /*[FIN]:: OBTENIENDO DATOS DE LA FASE ANTERIOR*/
      
        /*[INICIO]:: OBTENIENDO LAS CADENAS DE GASTO DE LA FASE PREVIA*/
		SELECT VID_CLASIFICADOR, VCOD_SEC_FUNC, NIMP_MON_SOL
        INTO VAR_ID_CLASIFICADOR, VAR_COD_SEC_FUNC, VAR_NIMP_MON_SOL
        FROM iafas_movimiento_mensual_cad
        WHERE 
        VANO= XANO AND 
        VSECUENCIA = VAR_SECUENCIA_DEV AND
        VSECUENCIA_INT= VAR_SECUENCIA_INT_DEV;
        /*[FIN]:: OBTENIENDO LAS CADENAS DE GASTO DE LA FASE PREVIA*/
        
        /*[INICIO]:: GENERANDO LAS SECUENCIAS PARA LA FASE DE GIRO*/
        SELECT IFNULL(LPAD(MAX(VSECUENCIA+1),6,0),'000001') INTO VAR_SECUENCIA
		FROM iafas_movimiento
		WHERE VANO=DATE_FORMAT(sysdate(), '%Y');
         
		SELECT IFNULL(LPAD(MAX(VSECUENCIA_INT+1),4,0),'0001') INTO VAR_SECUENCIA_INT
		FROM iafas_movimiento
		WHERE VANO=DATE_FORMAT(sysdate(), '%Y') AND 
		VSECUENCIA=VAR_SECUENCIA;
        /*[FIN]:: GENERANDO LAS SECUENCIAS PARA LA FASE DE GIRO*/
        
        /*[INICIO]:: CALCULANDO EL MONTO A SOLES CUANDO HAYA UN TIPO DE CAMBIO*/
		SELECT XIMP_DOCU*XTIP_CAM
        INTO VAR_NIMP_MON_EXT
        FROM DUAL;
		/*[FIN]:: CALCULANDO EL MONTO A SOLES CUANDO HAYA UN TIPO DE CAMBIO*/		
        
		INSERT INTO iafas_movimiento(VANO,VSECUENCIA, VSECUENCIA_INT,VREG_SIAF,VGLOSA,VFASE,VTIP_MOVIMIENTO,VCOD_ORIGEN,VCOD_RECURSO,NIMP_MON_SOL,
		NTIP_CAM,VTIP_MON, VCOD_ESTADO,VFUENTE_FINANCIAMIENTO,VCOD_TIPO_FINANCIAMIENTO,VUSUARIO_ING , DFECHA_ING, NIMP_MON_EXT) 
        
        VALUES(XANO, VAR_SECUENCIA, VAR_SECUENCIA_INT, XREG_SIAF, XGLOSA, 'G', VAR_TIP_MOVIMIENTO, VAR_COD_ORIGEN, VAR_COD_RECURSO,XIMP_DOCU,
        XTIP_CAM, XTIP_MON, 'AC',VAR_FUENTE_FINANCIAMIENTO,VAR_TIPO_FINANCIAMIENTO,XUSUARIO,SYSDATE(), VAR_NIMP_MON_EXT );
        
        INSERT INTO iafas_movimiento_mensual_cad(VANO,VSECUENCIA,VSECUENCIA_INT,VCOD_SEC_FUNC,VID_CLASIFICADOR, NIMP_MON_SOL ,NIMP_MON_EXT, VUSUARIO_ING,DFECHA_ING  )
        VALUES(XANO, VAR_SECUENCIA ,VAR_SECUENCIA_INT , VAR_COD_SEC_FUNC, VAR_ID_CLASIFICADOR, 0 , XUSUARIO, SYSDATE());
        
        COMMIT;
						
        ELSE
		 SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'NO EXISTE UN REGISTRO EN LA FASE DEVENGADO PARA REALZIAR EL GIRO.';
	END IF;   	
END IF;  
/* FIN MODO INSERCION*/


/* INICIO MODO ACTUALIZACION*/
IF XMODO = "U" THEN 

SELECT COUNT(1)INTO VAR_CONT_GIRO 
FROM iafas_movimiento 
WHERE 
VREG_SIAF=XREG_SIAF AND 
VCOD_ESTADO = 'AC' AND 
VFASE='G';

	IF (VAR_CONT_GIRO = 1 ) THEN 
		
        SELECT VSECUENCIA , VSECUENCIA_INT
        INTO VAR_SECUENCIA_GIRO , VAR_SECUENCIA_INT_GIRO
		FROM iafas_movimiento 
		WHERE 
		VREG_SIAF=XREG_SIAF AND 
		VCOD_ESTADO = 'AC' AND 
		VFASE='G';
                    
		UPDATE iafas_movimiento SET DFECHA_MOD = SYSDATE()
		WHERE 
        VANO = XANO AND
        VSECUENCIA=VAR_SECUENCIA_GIRO AND
        VSECUENCIA_INT=VAR_SECUENCIA_INT_GIRO;
    ELSE 
     SIGNAL SQLSTATE '45001' SET MESSAGE_TEXT = 'NO EXISTE  REGISTRO EN LA FASE DE GIRO.';
    END IF;
    
END IF;
/* FIN MODO ACTUALIZACION*/


END